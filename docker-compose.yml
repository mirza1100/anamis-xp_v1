version: '3.8'

services:
  anamis-xp:
    build: .
    container_name: anamis-xp-panel
    restart: unless-stopped
    ports:
      - "3000:3000"    # Web Panel
      - "443:443"      # Xray HTTPS
      - "1194:1194"    # OpenVPN
      - "51820:51820"  # WireGuard
      - "8080:8080"    # Gaming Tunnel
      - "8081:8081"    # Standard Tunnel
      - "22:22"        # SSH
    volumes:
      - ./config:/opt/anamis-xp/config
      - ./logs:/var/log/anamis-xp
      - ./cores/xray:/etc/xray
      - ./cores/openvpn:/etc/openvpn
      - ./cores/wireguard:/etc/wireguard
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=production
      - ANAMIS_DIR=/opt/anamis-xp
    networks:
      - anamis-network
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    privileged: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/dashboard"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: anamis-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - anamis-xp
    networks:
      - anamis-network

  # Optional: Redis for session storage
  redis:
    image: redis:alpine
    container_name: anamis-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - anamis-network
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for data persistence
  postgres:
    image: postgres:15-alpine
    container_name: anamis-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: anamis_xp
      POSTGRES_USER: anamis
      POSTGRES_PASSWORD: anamis123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - anamis-network

networks:
  anamis-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local